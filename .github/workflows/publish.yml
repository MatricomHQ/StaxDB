# .github/workflows/publish.yml

name: Publish StaxDB to NPM

on:
  push:
    branches:
      - 'release-test'
    # tags:
    #   - 'v*.*.*'

jobs:
  build-macos:
    name: Build for macOS (${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - arch: x64
          - arch: arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Build native addon for macOS
        shell: bash
        run: |
          set -e
          cd stax_js
          npm install --ignore-scripts
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            npm exec -- node-gyp rebuild --arch=arm64 --target_arch=arm64
          else
            npm exec -- node-gyp rebuild
          fi
          PLATFORM_DIR="darwin-${{ matrix.arch }}"
          mkdir -p ../prebuilds-staging/${PLATFORM_DIR}
          cp build/Release/staxdb.node ../prebuilds-staging/${PLATFORM_DIR}/staxdb.node
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-macos-${{ matrix.arch }}
          path: prebuilds-staging/

  build-linux:
    name: Build for Linux (x64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build with Node container and modern G++
        run: |
          docker run --rm --user root \
            -v ${{ github.workspace }}:/work \
            -w /work \
            node:20-bookworm \
            bash -c '
              set -ex

              # Install a modern C++ compiler (g++-12) and other essentials
              apt-get update
              apt-get install -y --no-install-recommends g++-12 python3

              # Navigate to the package
              cd stax_js

              # Install dependencies
              npm install --ignore-scripts --unsafe-perm

              # --------------------- THE CRITICAL FIX ---------------------
              # Force node-gyp to use the g++-12 compiler via npm config.
              # This overrides any defaults and is the definitive way.
              # ------------------------------------------------------------
              npm_config_cxx=g++-12 npm exec -- node-gyp rebuild

              # Stage the final binary
              PLATFORM_DIR="linux-x64-glibc"
              mkdir -p /work/prebuilds-staging/${PLATFORM_DIR}
              cp build/Release/staxdb.node /work/prebuilds-staging/${PLATFORM_DIR}/staxdb.node
            '
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-linux-x64
          path: prebuilds-staging/

  publish:
    name: Publish to NPM
    needs: [build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: stax_js/prebuilds
          pattern: prebuilds-*
          merge-multiple: true
      - name: Prepare and Publish
        shell: bash
        run: |
          set -e
          ls -R stax_js/prebuilds
          cd stax_js
          npm install --ignore-scripts
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}